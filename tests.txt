/*** ADDI ***/
# Test 1: Basic Functionality
ADDI x1, x0, 5      # expected: x1 = 5
ADDI x2, x0, 10     # expected: x2 = 10
ADDI x3, x1, 3      # expected: x3 = 8

# Test 2: Immediate Negative
ADDI x1, x0, 10     # expected: x1 = 10
ADDI x2, x1, -5     # expected: x2 = 5  

# Test 3: Zero Immediate
ADDI x1, x0, 20     # expected: x1 = 20
ADDI x2, x1, 0      # expected: x2 = 0

# Test 4: Maximum Positive Immediate
ADDI x1, x0, 2047   # expected: x1 = 2047

# Test 5: Minimum Negative Immediate
ADDI x1, x0, -2048  # expected: x1 = -2048

# Test 6: Does not mutate x0 register
ADDI x0, x0, 5      # expected: x0 = 0

/*** MV ***/
# Test 1: Basic Functionality
ADDI x1, x0, 42     # expected: x1 = 42
MV x2, x1           # expected: x2 = 42
MV x3, x2           # expected: x4 = 42

# Test 2: x0 as Source Register
MV x1, x0           # expected: x1 = 0

# Test 3: Does not mutate x0 register
ADDI x1, x0, 42     # expected: x1 = 42
MV x0, x1           # expected: x0 = 0

/*** NOP ***/
# Test 1: Basic Functionality
NOP                 # expected: pc = 4
NOP                 # expected: pc = 8
NOP                 # expected: pc = 12

# Test 2: Between instructions
ADDI x1, x0, 1      # expected: x1 = 1
NOP                 # expected: pc = 8
ADDI x2, x0, 2      # expected: x2 = 2
NOP                 # expected: pc = 16
ADDI x3, x0, 3      # expected: x3 = 3

/** SLTI ***/
# Test 1: Positive Immediates
ADDI x1, x0, 10     # expected: x1 = 10
SLTI x2, x1, 15     # expected: x2 = 1
SLTI x3, x1, 5      # expected: x3 = 0
SLTI x4, x1, 10     # expected: x4 = 0

# Test 2: Negative Immediates
ADDI x1, x0, -10    # expected: x1 = -10
SLTI x2, x1, 5      # expected: x2 = 1
SLTI x3, x1, -5     # expected: x3 = 1
SLTI x4, x1, -15    # expected: x4 = 0

/*** SLTIU ***/
# Test 1: Positive Immediates
ADDI x1, x0, 10     # expected: x1 = 10
SLTIU x2, x1, 15    # expected: x2 = 1
SLTIU x3, x1, 5     # expected: x3 = 0
SLTIU x4, x1, 10    # expected: x4 = 0

# Test 2: "Negative" Immediates
ADDI x1, x0, 10     # expected: x1
SLTIU x2, x1, -1 
ADDI x3, x0, -5
SLTIU x4, x3, 10

# Test SLTI and SLTIU with edge cases
ADDI x1, x0, 2047
SLTI x2, x1, 2047  # 2047 = 2047, x2 should be 0
SLTI x3, x1, -2048 # 2047 > -2048, x3 should be 0
SLTIU x4, x0, 1    # 0 < 1, x4 should be 1
ADDI x5, x0, -1
SLTIU x6, x1, -1   # Any positive < (2^32-1), x6 should be 1

# Test SLTI with boundary conditions
ADDI x1, x0, -2048  # Minimum immediate value
SLTI x2, x1, -2047  # -2048 < -2047, x2 should be 1
ADDI x3, x0, 2047   # Maximum immediate value
SLTI x4, x3, 2046   # 2047 > 2046, x4 should be 0

# Test SLTIU with zero and near-zero values
ADDI x1, x0, 0
SLTIU x2, x1, 0     # 0 = 0, x2 should be 0
ADDI x3, x0, 1
SLTIU x4, x3, 0     # 1 > 0, x4 should be 0
SLTIU x5, x0, 1     # 0 < 1, x5 should be 1

# Test SLTI and SLTIU in sequence
ADDI x1, x0, 100
ADDI x2, x0, -100
SLTI x3, x1, 50     # 100 < 50, x3 should be 0
SLTI x4, x2, 50     # -100 < 50, x4 should be 1
SLTIU x5, x1, 50    # 100 > 50, x5 should be 0
SLTIU x6, x2, 50    # (2^32-100) > 50, x6 should be 0

/*** SEQZ ***/
# Test basic SEQZ operation
ADDI x1, x0, 0      # x1 = 0
SEQZ x2, x1         # x1 == 0, x2 should be 1
ADDI x3, x0, 10     # x3 = 10
SEQZ x4, x3         # x3 != 0, x4 should be 0

# Test SEQZ with x0 register
SEQZ x1, x0         # x0 is always 0, x1 should be 1
